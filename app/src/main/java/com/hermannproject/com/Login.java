package com.hermannproject.com;

import androidx.appcompat.app.AppCompatActivity;
import androidx.coordinatorlayout.widget.CoordinatorLayout;

import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.view.View;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.firebase.ui.auth.AuthUI;
import com.firebase.ui.auth.ErrorCodes;
import com.firebase.ui.auth.IdpResponse;
import com.google.android.material.snackbar.Snackbar;

import java.util.Arrays;

/**
 * @Autor : Hermann90
 * This Activity allow us to login and registration on our Firestore Back-End.
 */
public class Login extends AppCompatActivity {

    /**
     * @Autor : Hermann90
     *  FOR DATA
     *  1 - Identifier for Sign-In Activity
     */
    private static final int RC_SIGN_IN = 123;
    Context context = Login.this;
//    ProgressDialog myProgressDialog;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);

        findViewById(R.id.modal).setVisibility(View.GONE);

        EditText phoneNumber = findViewById(R.id.phone_number);
        phoneNumber.setText("");

        LinearLayout save = findViewById(R.id.save);
        save.setOnClickListener(view -> {
            startSignInActivity();
        });
    }

    /**
     * @Autor : Hermann90
     * NAVIGATION AND REGISTRATION USERS
     * 2 - Launch the connection activity, this activity is created by the Firebase Auth library.
     * The latter will launch a connection / registration activity auto-generated by the Firebase-UI library!
     */
    private void startSignInActivity(){
        startActivityForResult(
                AuthUI.getInstance()
                        .createSignInIntentBuilder()
                        .setTheme(R.style.LoginTheme)
                        .setAvailableProviders(
                                Arrays.asList(
                                        new AuthUI.IdpConfig.EmailBuilder().build()
                                ))
                        .setIsSmartLockEnabled(false, true)
                        .setLogo(R.drawable.ic_menu_gallery)
                        .build(),
                RC_SIGN_IN);
    }


    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        // 4 - Handle SignIn Activity response on activity result
        this.handleResponseAfterSignIn(requestCode, resultCode, data);
    }


    // 3 - Method that handles response after SignIn Activity close
    private void handleResponseAfterSignIn(int requestCode, int resultCode, Intent data){

        IdpResponse response = IdpResponse.fromResultIntent(data);

        if (requestCode == RC_SIGN_IN) {
            if (resultCode == RESULT_OK) { // SUCCESS
                goodPopup2(context,getString(R.string.good_registration));
            } else { // ERRORS
                if (response == null) {
                    goodPopup2(context,getString(R.string.error_authentication_canceled));
                } else if (response.getError().getErrorCode() == ErrorCodes.NO_NETWORK) {
                    goodPopup2(context,getString(R.string.error_no_internet));
                } else if (response.getError().getErrorCode() == ErrorCodes.UNKNOWN_ERROR) {
                    goodPopup2(context,getString(R.string.error_unknown_error));
                }
            }
        }
    }

    public void goodPopup2(Context context, String message){
        CoordinatorLayout view1 = findViewById(R.id.main_content);
        Snackbar pop =  showSnackbar( view1, message);
        findViewById(R.id.modal).setVisibility(View.VISIBLE);
        pop.setAction("Ok", view -> {
            setResult(RESULT_OK, null);
//            onBackPressed();
        });
        pop.show();
    }


    public static Snackbar showSnackbar(View coordinatorLayout,String message){
        Snackbar snackbar = Snackbar
                .make(coordinatorLayout, message, Snackbar.LENGTH_INDEFINITE);
        snackbar.setActionTextColor(Color.WHITE);
        View sbView = snackbar.getView();
        TextView textView = (TextView) sbView.findViewById(com.google.android.material.R.id.snackbar_text);
        textView.setTextColor(Color.WHITE);
        return snackbar;
    }
}